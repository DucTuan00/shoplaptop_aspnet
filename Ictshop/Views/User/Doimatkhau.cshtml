@model Ictshop.Models.Nguoidung
@{ ViewBag.Title = "Quenmatkhau";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<h2>Hãy đăng nhập để sử dụng đầy đủ tính năng của Website</h2>
<br />

<h3 class="text-danger">@ViewBag.Fail</h3>


@using (Html.BeginForm("DoiMk", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MaNguoiDung)
    <div class="form-group">
        @Html.LabelFor(model => model.Matkhau, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Matkhau, new { htmlAttributes = new { type = "Password", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Matkhau, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Matkhau">Xác nhận mật khẩu: </label>
        <div class="col-md-10">
            <input id="confirmPassword" class="form-control text-box single-line" name="confirmPassword" , type="Password">
            @*@Html.ValidationMessageFor(model => model.Matkhau, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div id="groupToHide" style="display: none;">
        <div class="form-group">
            @Html.LabelFor(model => model.Anhdaidien, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Anhdaidien, new { htmlAttributes = new { @class = "form-control" } })
                <button id="chonDuongDanAnh" type="button" class="btn btn-info"><i class="fas fa-image font-size-20"></i>Upload file</button>
                @Html.ValidationMessageFor(model => model.Anhdaidien, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hoten, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hoten, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hoten, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dienthoai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dienthoai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dienthoai, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-primary" type="submit" id="submitButton">Đổi mật khẩu</button>
            <script>
                var passwordField = document.getElementById("Matkhau");
                var confirmPasswordField = document.getElementById("confirmPassword");
                var submitButton = document.getElementById("submitButton");

                // Add event listeners to the password and confirm password fields
                passwordField.addEventListener("input", validatePasswords);
                confirmPasswordField.addEventListener("input", validatePasswords);

                // Function to validate passwords
                function validatePasswords() {
                    var password = passwordField.value;
                    var confirmPassword = confirmPasswordField.value;

                    // If passwords match and they are not empty, enable submit button
                    if (password === confirmPassword && password !== '') {
                        submitButton.disabled = false;
                    } else {
                        submitButton.disabled = true;
                    }
                }
            </script>
            <script>
                window.onload = function () {
                    var textField = document.getElementById("Matkhau");
                    textField.value = "";
                };
            </script>
        </div>
    </div>

</div>}


